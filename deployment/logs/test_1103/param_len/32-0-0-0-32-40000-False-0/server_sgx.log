11/05/2024 01:26:04 AM - INFO - Enclave: /home/azureuser/prot_mpc/sgx_server/prog_bc/prog_bc.cpp(43): prog_bc: initialize and read client public keys
Enclave: /home/azureuser/prot_mpc/sgx_server/prog_mpc/prog_mpc.cpp(45): prog_mpc: generate rsa key
Enclave: /home/azureuser/prot_mpc/sgx_server/prog_mpc/prog_mpc.cpp(58): prog_mpc: initialize and read client public keys
Enclave: /home/azureuser/prot_mpc/sgx_server/prog_mpc/prog_mpc.cpp(215): prog_mpc: write public key
Enclave: /home/azureuser/prot_mpc/sgx_server/prog_mpc/prog_mpc.cpp(225): prog_mpc: generate evidence for public key
Host: listen to AMD server
Host: listen to clients
Host: create enclave for image:./prog_bc/prog_bc.signed
Host: create enclave for image:./prog_mpc/prog_mpc.signed
Host: initialize enclaves
Host: receive eid of AMD server
Host: get eid_bc from prog_bc
Host: get eid_bc 0x3E173E6218F9A0BC49D033E6174DA7B3
Host: send eid_bc to clients
Host: send eid_bc to AMD server
Host: prog_bc setup
Host: setup public key from SGX enclave
Enclave: /home/azureuser/prot_mpc/common/evidence/evidence_generator.cpp(131): generate_attestation_evidence succeeded.
Host: setup SGX public key
Enclave: /home/azureuser/prot_mpc/common/evidence/evidence_verifier.cpp(68): oe_verify_evidence succeeded
Enclave: /home/azureuser/prot_mpc/common/evidence/evidence_verifier.cpp(197): attestation succeeded
Hose: receive AMD pubkey from AMD server
Host: get commit message from prog_bc
Enclave: /home/azureuser/prot_mpc/common/evidence/evidence_generator.cpp(131): generate_attestation_evidence succeeded.
Host: send commit message to clients
Host: send commit message to AMD server
Host: setup commit message for prog_mpc enclave
Enclave: /home/azureuser/prot_mpc/common/evidence/evidence_verifier.cpp(68): oe_verify_evidence succeeded
Enclave: /home/azureuser/prot_mpc/common/evidence/evidence_verifier.cpp(197): attestation succeeded
370085 320000
2024-11-04T17:25:35+0000.768394Z [(H)ERROR] tid(0x7f0229f73140) | Backtrace:
2024-11-04T17:25:35+0000.772245Z [(H)ERROR] tid(0x7f0229f73140) | oe_abort_with_td(): 0x7f020820d81f
2024-11-04T17:25:35+0000.772249Z [(H)ERROR] tid(0x7f0229f73140) | oe_abort(): 0x7f020820c682
2024-11-04T17:25:35+0000.772250Z [(H)ERROR] tid(0x7f0229f73140) | abort(): 0x7f02081e22a9
2024-11-04T17:25:35+0000.772251Z [(H)ERROR] tid(0x7f0229f73140) | _ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE(): 0x7f020816674b
2024-11-04T17:25:35+0000.772251Z [(H)ERROR] tid(0x7f0229f73140) | _Znwm(): 0x7f020814f782
2024-11-04T17:25:35+0000.772252Z [(H)ERROR] tid(0x7f0229f73140) | _ZNSt3__117__libcpp_allocateEmm(): 0x7f0208043542
2024-11-04T17:25:35+0000.772253Z [(H)ERROR] tid(0x7f0229f73140) | _ZNSt3__19allocatorI9ParameterI2ZpILy1000000007EELm40000EEE8allocateEmPKv(): 0x7f02080494af
2024-11-04T17:25:35+0000.772253Z [(H)ERROR] tid(0x7f0229f73140) | _ZNSt3__116allocator_traitsINS_9allocatorI9ParameterI2ZpILy1000000007EELm40000EEEEE8allocateERS6_m(): 0x7f0208048f88
2024-11-04T17:25:35+0000.772254Z [(H)ERROR] tid(0x7f0229f73140) | _ZNSt3__16vectorI9ParameterI2ZpILy1000000007EELm40000EENS_9allocatorIS4_EEE11__vallocateEm(): 0x7f020804885d
2024-11-04T17:25:35+0000.772255Z [(H)ERROR] tid(0x7f0229f73140) | _ZNSt3__16vectorI9ParameterI2ZpILy1000000007EELm40000EENS_9allocatorIS4_EEEC2ERKS7_(): 0x7f020804aa39
2024-11-04T17:25:35+0000.772255Z [(H)ERROR] tid(0x7f0229f73140) | _ZN10PolynomialI2ZpILy1000000007EE9ParameterIS1_Lm40000EEEC2ERKNSt3__16vectorIS3_NS5_9allocatorIS3_EEEE(): 0x7f0208048006
2024-11-04T17:25:35+0000.772256Z [(H)ERROR] tid(0x7f0229f73140) | _ZN6ClientC2EmRK9ParameterI2ZpILy1000000007EELm40000EERK12SecaggConfig(): 0x7f020803d819
2024-11-04T17:25:35+0000.772257Z [(H)ERROR] tid(0x7f0229f73140) | _ZN17ProgHybridHandler13get_params_toEmPhm(): 0x7f020803c431
2024-11-04T17:25:35+0000.772258Z [(H)ERROR] tid(0x7f0229f73140) | get_params_to(): 0x7f0208032408
2024-11-04T17:25:35+0000.772258Z [(H)ERROR] tid(0x7f0229f73140) | ecall_get_params_to(): 0x7f0208057b08
2024-11-04T17:25:35+0000.772259Z [(H)ERROR] tid(0x7f0229f73140) | oe_handle_call_enclave_function(): 0x7f020820bda0
2024-11-04T17:25:35+0000.772260Z [(H)ERROR] tid(0x7f0229f73140) | _handle_ecall(): 0x7f020820de2b
2024-11-04T17:25:35+0000.772260Z [(H)ERROR] tid(0x7f0229f73140) | oe_enter(): 0x7f020820eb59
2024-11-04T17:25:35+0000.772281Z [(H)ERROR] tid(0x7f0229f73140) | :OE_ENCLAVE_ABORTING [/source/openenclave/host/calls.c:_call_enclave_function_impl:56]

11/05/2024 01:26:04 AM - ERROR - /home/azureuser/prot_mpc/sgx_server/host/host.cpp:371: Check ret == OE_OK && ret_ecall == MY_ECALL_SUCCESS failed.

